# Docker Compose for Avalanche CMS - Local Development Database
# ---------------------------------------------------------------------
# This Docker Compose file configures the local development environment 
# for Avalanche CMS Database. It includes:
# - 'postgres': PostgreSQL database using Alpine image for efficiency.
# - 'pgadmin': Web-based PostgreSQL administration tool.
#
# Notes:
# - Uses docker secret files for secure management of sensitive data.
# - Persistent volumes for database and pgAdmin data.
#
# Usage:
# - Run "docker compose up" in this directory to start the services.
# - Or run "docker compose -f database/postgres/docker-compose.yml up" 
#   in the repository root directory.
# - Run -d for detached mode, observe in Docker Desktop.
# ---------------------------------------------------------------------

version: '3.8'
name: avalanche-cms-local-db

# Network Configuration
networks:
  avalanche-cms:
    driver: bridge  # Using bridge driver for inter-container communication

# Service Definitions
services:

  # PostgreSQL Database Service
  postgres:
    container_name: postgres
    image: postgres:16-alpine  # Using Alpine for a smaller, more secure base image
    environment:
      POSTGRES_DB: avalanche-cms-db  # Database name
      POSTGRES_USER: admin       # Database admin username
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-secret  # Database admin secret file
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./../../.secrets/postgres-secret.env:/run/secrets/postgres-secret:ro  # Secret file mount (read-only)
    ports:
      - "5432:5432"  # Exposing PostgreSQL default port
    restart: always
    networks:
      - avalanche-cms

  # pgAdmin Service for Database Management
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@avalanche-cms.com  # Admin username
      PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/pgadmin-secret  # Admin secret file
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./../../.secrets/pgadmin-secret.env:/run/secrets/pgadmin-secret:ro  # Secret file mount (read-only)
    ports:
      - "8080:80"  # Exposing pgAdmin on http://localhost:8080/
    restart: always
    depends_on:
      - postgres  # Ensuring pgAdmin starts after PostgreSQL
    networks:
      - avalanche-cms
      
# Persistent volumes
volumes:
  postgres-data:  # Volume for PostgreSQL data
  pgadmin-data:   # Volume for pgAdmin data
